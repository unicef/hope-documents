[tox]
requires =
    tox>=4.2
    tox-uv>=1.25
env_list =
    lint
    d52-py313
    d42-py312
    docs
    type-d52
    type-452
    pkg_meta

[testenv]
description = run tests
deps =
    d42: django==4.2.*
    d52: django==5.2.*
pass_env =
    CI
    DATABASE_URL
    RABBIT_SERVER
set_env =
    BROKER_URL = rabbit://localhost:10000?vhost=pytest&exchange=test_stream
    DJANGO_SETTINGS_MODULE = demo.settings
    PYTHONDONTWRITEBYTECODE = 1
    PYTHONPATH = ./src:tests/_demoapp
    PYTHONWARNINGS = ignore::DeprecationWarning
commands =
    {posargs:pytest tests -rw --cov-report=xml  --junit-xml=junit.xml -o junit_family=legacy}
dependency_groups = dev

[testenv:lint]
description = run static analysis and style check using ruff
skip_install = true
deps =
    pre-commit-uv>=4.1.1
commands =
    pre-commit run --all-files --show-diff-on-failure
dependency_groups = dev

[testenv:docs]
description = build mkdocs documentation
skip_install = false
deps =
commands =
    mkdocs build -f docs/mkdocs.yml {posargs:}
dependency_groups = docs

[testenv:type-d52]
base = type

[testenv:pkg_meta]
runner = uv-venv-lock-runner
description = check that python package
skip_install = true
deps =
    check-wheel-contents>=0.6
    twine>=5.1.1
    uv>=0.5
commands =
    uv build --sdist -q --out-dir {env_tmp_dir} .
    uvx twine check {env_tmp_dir}{/}*
    uvx check-wheel-contents --ignore W002,W004,W009,W004 {env_tmp_dir}
    uv pip install --no-binary django-streaming --find-links {env_tmp_dir} django-streaming

[testenv:type-d42]
base = type

[type]
description = run type check on code base
deps =
    d42: django==4.2.*
    d52: django==5.2.*
commands =
    mypy --config-file mypy.ini {posargs:}
dependency_groups =
    dev
    type-check
