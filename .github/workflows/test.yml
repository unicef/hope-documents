name: Test

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags-ignore: [ "**" ]
  pull_request:
#  schedule:
#    - cron: "0 8 * * *"

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    defaults:
      run:
        shell: bash
    outputs:
      run_tests: ${{ steps.changes.outputs.run_tests }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - id: changes
        name: Check for file changes
        uses: dorny/paths-filter@0bc4621a3135347011ad047f9ecf449bf72ce2bd # v3.0.0
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml

  test:
    needs: [ changes ]
    if: github.event_name == 'workflow_dispatch' || needs.changes.outputs.run_tests == 'true'
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14
        env:
          POSTGRES_DATABASE: country_workspace
          POSTGRES_PASSWORD: postgres
          POSTGRES_USERNAME: postgres
        ports:
          - 15432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 10000:5672
          - 10001:15672
    strategy:
      fail-fast: false
      matrix:
        cfg: ["d52-py313", "d42-py312"]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: |
            pyproject.toml
            uv.lock
          cache-suffix: ${{ matrix.cfg }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          python-version: ${{ matrix.python }}

      - name: Install Tesseract OCR
        run: |
          sudo apt-get update
          sudo apt-get install -y tesseract-ocr libtesseract-dev

      - name: Install tox
        run: uv tool install --python-preference only-managed --python 3.13 tox --with tox-uv --with tox-gh-actions

      - name: Setup test suite
        run: tox run -vv --notest --skip-missing-interpreters false -e ${{ matrix.cfg }}

      - name: Run test suite ${{ matrix.cfg }}
        run: tox -e ${{ matrix.cfg }}

      - name: Archive selenium results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: selenium-log-report
          path: latest_logs
          retention-days: 5

      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.cfg }}
          path: junit.xml
        if: ${{ always() }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        continue-on-error: true
        with:
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          flags: unittests
          files: ./coverage.xml
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
          name: codecov-${{env.GITHUB_REF_NAME}}
          slug: ${{ github.repository }}
